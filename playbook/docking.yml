- name: Setup Docker and Kubernetes
  hosts: localhost
  become: yes
  tasks:

    - name: Update APT package index
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Start Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Download Kubernetes signing key
      shell: |
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        state: present
      register: kube_repo

    - debug:
        var: kube_repo

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes packages at current version
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: held

    - name: Initialize Kubernetes cluster
      command: kubeadm init
      register: kubeadm_init
      when: ansible_hostname == "master"

    - name: Set up kubeconfig for regular user
      shell: |
        mkdir -p $HOME/.kube
        cp /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: ansible_hostname == "master"

    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: ansible_hostname == "master"

    - name: Allow Kubernetes ports through UFW
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 6443
        - 10250
        - 10251
        - 10252

- name: Join Kubernetes worker nodes
  hosts: workers
  become: yes
  tasks:
    - name: Join Kubernetes cluster
      command: "{{ hostvars['master']['kubeadm_init'].stdout_lines[-1] }}"
      when: ansible_hostname != "master"
